name: Terraform Infra | K8s Deployment | CICD

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  DEPLOYMENT_PATH: root-modules/env/dev
  TF_VERSION: 1.8.5
  AWS_REGION: us-east-1
  CLUSTER_NAME: effulgencetech-dev

jobs:
  # =====================================================
  # 1️⃣ TERRAFORM PLAN (Root Job - always runs first)
  # =====================================================
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    defaults:
      run:
        working-directory: ${{ env.DEPLOYMENT_PATH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan.out

      - name: Save Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.DEPLOYMENT_PATH }}

  # =====================================================
  # 2️⃣ TERRAFORM APPLY (Manual trigger + Env approval)
  # =====================================================
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event_name == 'workflow_dispatch'
    defaults:
      run:
        working-directory: ${{ env.DEPLOYMENT_PATH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ env.DEPLOYMENT_PATH }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.out

      # =====================================================
      # 3️⃣ UPDATE KUBECONFIG & WAIT FOR ALB DNS
      # =====================================================
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Wait for ALB & Export DNS
        run: |
          echo "Waiting for ALB provisioning..."
          for i in {1..30}; do
            ALB_DNS=$(kubectl get ingress -A -o jsonpath='{.items[*].status.loadBalancer.ingress[0].hostname}')
            if [ -n "$ALB_DNS" ]; then
              echo "✅ ALB DNS found: $ALB_DNS"
              echo "$ALB_DNS" > alb_info.txt
              break
            fi
            echo "⏳ Still waiting for ALB..."
            sleep 20
          done

      - name: Upload ALB DNS as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: alb-info
          path: alb_info.txt
